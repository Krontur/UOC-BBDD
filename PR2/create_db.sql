DROP SCHEMA IF EXISTS ubd_20182 CASCADE;

CREATE SCHEMA ubd_20182 AUTHORIZATION postgres;

GRANT ALL ON SCHEMA ubd_20182 TO postgres;

SET search_path TO ubd_20182;

BEGIN WORK;

SET TRANSACTION READ WRITE;

SET datestyle = DMY;


CREATE TABLE PERSON(
	id SMALLINT,
	name VARCHAR(255) NOT NULL,
	birth DATE NOT NULL,
	death DATE,
	gender VARCHAR(255) NOT NULL,
	nationality VARCHAR(255) NOT NULL,
CONSTRAINT PK_PERSON PRIMARY KEY(id),
CONSTRAINT DATE_VALID CHECK (CASE WHEN death IS NOT NULL THEN birth < death END),
CONSTRAINT CHECK_GENDER CHECK(gender IN('M','F')));

CREATE TABLE DIRECTOR(
	id SMALLINT,	
	debut_year SMALLINT NOT NULL,
	num_awards SMALLINT NOT NULL DEFAULT 0,
	total_incomes BIGINT NOT NULL DEFAULT 0,
CONSTRAINT PK_DIRECTOR PRIMARY KEY(id), 
CONSTRAINT FK_PERSON FOREIGN KEY (id) REFERENCES PERSON(id),
CONSTRAINT POSITIVE_DEBUT CHECK (debut_year > 0),
CONSTRAINT POSITIVE_AWARDS CHECK (num_awards >= 0), 
CONSTRAINT POSITIVE_INCOMES CHECK (total_incomes >= 0));


CREATE TABLE ACTOR(
	id SMALLINT,
CONSTRAINT PK_ACTOR PRIMARY KEY(id),
CONSTRAINT FK_PERSON FOREIGN KEY (id) REFERENCES PERSON(id));


CREATE TABLE MOVIE(
	id SMALLINT,
	title VARCHAR(255) NOT NULL,
	genre VARCHAR(255) NOT NULL,
	year SMALLINT NOT NULL,
	country VARCHAR(255) NOT NULL,
	duration SMALLINT NOT NULL,
	budget INTEGER NOT NULL,
	incomes INTEGER NOT NULL,
	id_movie_prev SMALLINT,
	id_director SMALLINT NOT NULL,
CONSTRAINT PK_MOVIE PRIMARY KEY(id),
CONSTRAINT FK_SAGA FOREIGN KEY (id_movie_prev) REFERENCES MOVIE(id),
CONSTRAINT FK_DIRECTOR FOREIGN KEY (id_director) REFERENCES DIRECTOR(id),
CONSTRAINT POSITIVE_DURATION CHECK (duration > 0),
CONSTRAINT POSITIVE_BUDGET CHECK (budget > 0),
CONSTRAINT CHECK_GENRE CHECK(genre IN('Action','Adventure','Comedy','Crime','Drama','Historical','Horror','Musical','ScienceFiction','War','Western')));


CREATE TABLE PARTICIPATION(
	id_actor SMALLINT,
	id_movie SMALLINT,
	character VARCHAR(255) NOT NULL,
	role VARCHAR(255) NOT NULL,
CONSTRAINT PK_PARTICIPATION PRIMARY KEY(id_actor, id_movie),
CONSTRAINT FK_ACTOR FOREIGN KEY(id_actor) REFERENCES ACTOR(id),
CONSTRAINT FK_MOVIE FOREIGN KEY(id_movie) REFERENCES MOVIE(id) ON DELETE CASCADE,
CONSTRAINT CHECK_ROLE CHECK(role IN('Leading','Supporting','Narrator','Cameo','Unclassified')));

									
CREATE TABLE REPORT_DIRECTORS_NATIONALITY(
    nationality VARCHAR(255),   
    genre VARCHAR(255),
    num_movies SMALLINT NOT NULL,
    max_awards SMALLINT  NOT NULL,
	total_duration SMALLINT  NOT NULL,
CONSTRAINT PK_REPORT_DIRECTORS_NATIONALITY PRIMARY KEY(nationality, genre));

													   
CREATE TYPE report_dir_nat_type AS (
	t_nationality VARCHAR(255),   
    t_genre VARCHAR(255),
    t_num_movies SMALLINT,
    t_max_awards SMALLINT,
	t_total_duration SMALLINT
);
													   
COMMIT;

